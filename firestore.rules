rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Pomocné funkcie
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function hasValidInvitation(invitationId) {
      return exists(/databases/$(database)/documents/invitations/$(invitationId)) &&
        get(/databases/$(database)/documents/invitations/$(invitationId)).data.status == 'pending';
    }

    // Pravidlá pre používateľov
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // Pravidlá pre pozvánky
    match /invitations/{invitationId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin();
      allow update: if isAdmin() || (isAuthenticated() && hasValidInvitation(invitationId));
      allow delete: if isAdmin();
    }

    // Pravidlá pre kontakty
    match /contacts/{contactId} {
      allow read: if isAuthenticated() && isInSameCompany(resource.data.companyID);
      allow create: if isAuthenticated() && isInSameCompany(request.resource.data.companyID);
      allow update: if isAuthenticated() && isInSameCompany(resource.data.companyID);
      allow delete: if isAuthenticated() && isInSameCompany(resource.data.companyID);
    }

    // Pravidlá pre obchodné prípady
    match /businessCases/{caseId} {
      allow read: if isAuthenticated() && isInSameCompany(resource.data.companyID);
      allow create: if isAuthenticated() && isInSameCompany(request.resource.data.companyID);
      allow update: if isAuthenticated() && isInSameCompany(resource.data.companyID);
      allow delete: if isAuthenticated() && isInSameCompany(resource.data.companyID);
    }

    // Pravidlá pre sledované prepravy
    match /trackedTransports/{transportId} {
      allow read: if isAuthenticated() && isInSameCompany(resource.data.companyID);
      allow create: if isAuthenticated() && isInSameCompany(request.resource.data.companyID);
      allow update: if isAuthenticated() && isInSameCompany(resource.data.companyID);
      allow delete: if isAuthenticated() && isInSameCompany(resource.data.companyID);
    }

    // Pomocná funkcia na kontrolu, či je užívateľ v rovnakej firme
    function isInSameCompany(companyId) {
      let user = get(/databases/$(database)/documents/users/$(request.auth.uid));
      return request.auth != null && user != null && user.data.companyID == companyId;
    }

    // Pravidlá pre kolekciu companies
    match /companies/{companyId} {
      allow read: if request.auth != null;  // Každý prihlásený užívateľ môže čítať údaje o firmách
      allow write: if isAdmin();
    }

    // Pravidlá pre kolekciu vehicles
    match /vehicles/{vehicleId} {
      allow read: if request.auth != null && isInSameCompany(resource.data.companyID);
      allow write: if isAdmin();
    }

    // Pravidlá pre kolekciu routes
    match /routes/{routeId} {
      allow read: if request.auth != null && isInSameCompany(resource.data.companyID);
      allow write: if isAdmin();
    }

    // Pravidlá pre kolekciu settings
    match /settings/{settingId} {
      allow read: if request.auth != null && isInSameCompany(resource.data.companyID);
      allow write: if isAdmin();
    }

    // Pravidlá pre ostatné kolekcie
    match /{document=**} {
      allow read, write: if true; // Povolíme všetky operácie pre všetkých
    }
  }
} 